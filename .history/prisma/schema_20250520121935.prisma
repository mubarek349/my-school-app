// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserType {
  KIDS
  GENERAL
  ADULT
}

model coursePackage {
  id             String                @id @default(uuid())
  userId         String
  title          String                @db.Text
  description    String?
  userType       UserType              @default(GENERAL)
  courses        course[]
  isPublished    Boolean               @default(false)
  students       wpos_wpdatatable_23[] @relation("PackageHistory")
  activeStudents wpos_wpdatatable_23[] @relation("ActivePackage")
  createdAt      DateTime              @default(now())
  updatedAt      DateTime              @updatedAt
}

model course {
  id          String        @id @default(uuid())
  title       String        @db.Text
  description String?       @db.Text
  imageUrl    String?       @db.Text
  isPublished Boolean       @default(false)
  order       Int // Determines sequence in package
  packageId   String
  package     coursePackage @relation(fields: [packageId], references: [id], onDelete: Cascade)

  timeLimit Int?
  timeUnit  String?

  chapters  chapter[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([packageId])
}

model chapter {
  id          String  @id @default(uuid())
  title       String
  description String? @db.Text
  videoUrl    String? @db.Text
  position    Int
  isPublished Boolean @default(false)
  // isFree      Boolean @default(false)

  questions question[]

  courseId String
  course   course @relation(fields: [courseId], references: [id], onDelete: Cascade)

  studentProgress studentProgress[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([courseId])
}

model question {
  id              String           @id @default(cuid())
  chapter         chapter          @relation(fields: [chapterId], references: [id], onDelete: Cascade)
  chapterId       String
  question        String
  questionOptions questionOption[]
  questionAnswer  questionAnswer[]
  studentQuiz     studentQuiz[]

  @@index([chapterId])
}

model questionOption {
  id                 String              @id @default(cuid())
  question           question            @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId         String
  option             String
  questionAnswer     questionAnswer[]
  studentQuizAnswers studentQuizAnswer[]

  @@index([questionId])
}

model questionAnswer {
  id         String         @id @default(cuid())
  question   question       @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId String
  answer     questionOption @relation(fields: [answerId], references: [id], onDelete: Cascade)
  answerId   String

  @@index([answerId])
  @@index([questionId])
}

model studentQuiz {
  id                 String              @id @default(cuid())
  student            wpos_wpdatatable_23 @relation(fields: [studentId], references: [wdt_ID], onDelete: Cascade)
  studentId          Int
  question           question            @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId         String
  takenAt            DateTime            @default(now())
  studentQuizAnswers studentQuizAnswer[]

  @@unique([studentId, questionId])
  @@index([questionId])
  @@index([studentId])
}

model studentQuizAnswer {
  id               String         @id @default(cuid())
  studentQuiz      studentQuiz    @relation(fields: [studentQuizId], references: [id], onDelete: Cascade)
  studentQuizId    String
  selectedOption   questionOption @relation(fields: [selectedOptionId], references: [id], onDelete: Cascade)
  selectedOptionId String

  @@unique([studentQuizId, selectedOptionId])
  @@index([selectedOptionId])
  @@index([studentQuizId])
}

model studentProgress {
  id          String              @id @default(cuid())
  student     wpos_wpdatatable_23 @relation(fields: [studentId], references: [wdt_ID], onDelete: Cascade)
  studentId   Int
  chapter     chapter             @relation(fields: [chapterId], references: [id], onDelete: Cascade)
  chapterId   String
  isStarted   Boolean             @default(true)
  isCompleted Boolean             @default(false)
  completedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([studentId, chapterId])
  @@index([chapterId])
  @@index([studentId])
}

model admin {
  id        String   @id @default(cuid())
  name      String
  phoneno   String   @unique
  passcode  String
  createdAt DateTime @default(now())
}

model wpos_wpdatatable_23 {
  wdt_ID         Int               @id @default(autoincrement())
  name           String
  passcode       String            @unique
  phoneno        String            @unique
  status         String
  // History of all packages (many-to-many)
  packages       coursePackage[]   @relation("PackageHistory")
  // Active package (one-to-one or many-to-one)
  subject        String?
  
  activePackage  coursePackage?    @relation("ActivePackage", fields: [subject], references: [id])
  progress       studentProgress[]
  studentQuizzes studentQuiz[]
  chat_id        String            @unique
}

// ###############################################################################################3
// #################################################################################################33
// #######################################################################################################
// #######################################################################################################

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider     = "mysql"
//   url          = env("DATABASE_URL")
//   relationMode = "prisma"
// }

// model course {
//   id          String  @id @default(uuid())
//   userId      String
//   title       String  @db.Text
//   description String? @db.Text
//   imageUrl    String? @db.Text
//   isPublished Boolean @default(false)
//   order    Int
//   // attachments attachment[]
//   // categoryId  String?
//   // category    category?    @relation(fields: [categoryId], references: [id])

//   chapters chapter[]

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   // @@index([categoryId])
// }

// model chapter {
//   id          String  @id @default(uuid())
//   title       String
//   description String? @db.Text
//   videoUrl    String? @db.Text
//   position    Int
//   isPublished Boolean @default(false)
//   // isFree      Boolean @default(false)

//   questions question[]

//   courseId String
//   course   course @relation(fields: [courseId], references: [id], onDelete: Cascade)

//   studentProgress studentProgress[]

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@index([courseId])
// }

// model question {
//   id              String           @id @default(cuid())
//   chapter         chapter          @relation(fields: [chapterId], references: [id], onDelete: Cascade)
//   chapterId       String
//   question        String
//   questionOptions questionOption[]
//   questionAnswer  questionAnswer[]
//   studentQuiz     studentQuiz[]

//   @@index([chapterId])
// }

// model questionOption {
//   id                 String              @id @default(cuid())
//   question           question            @relation(fields: [questionId], references: [id], onDelete: Cascade)
//   questionId         String
//   option             String
//   questionAnswer     questionAnswer[]
//   studentQuizAnswers studentQuizAnswer[]

//   @@index([questionId])
// }

// model questionAnswer {
//   id         String         @id @default(cuid())
//   question   question       @relation(fields: [questionId], references: [id], onDelete: Cascade)
//   questionId String
//   answer     questionOption @relation(fields: [answerId], references: [id], onDelete: Cascade)
//   answerId   String

//   @@index([answerId])
//   @@index([questionId])
// }

// // STUDENT QUIZ PARTICIPATION
// model studentQuiz {
//   id                 String              @id @default(cuid())
//   student            wpos_wpdatatable_23 @relation(fields: [studentId], references: [wdt_ID], onDelete: Cascade)
//   studentId          Int
//   question           question            @relation(fields: [questionId], references: [id], onDelete: Cascade)
//   questionId         String
//   takenAt            DateTime            @default(now())
//   studentQuizAnswers studentQuizAnswer[]

//   @@unique([studentId, questionId])
//   @@index([questionId])
//   @@index([studentId])
// }

// model studentQuizAnswer {
//   id               String         @id @default(cuid())
//   studentQuiz      studentQuiz    @relation(fields: [studentQuizId], references: [id], onDelete: Cascade)
//   studentQuizId    String
//   selectedOption   questionOption @relation(fields: [selectedOptionId], references: [id], onDelete: Cascade)
//   selectedOptionId String

//   @@unique([studentQuizId, selectedOptionId])
//   @@index([selectedOptionId])
//   @@index([studentQuizId])
// }

// // TRACK STUDENT chapter PROGRESS
// model studentProgress {
//   id          String              @id @default(cuid())
//   student     wpos_wpdatatable_23 @relation(fields: [studentId], references: [wdt_ID], onDelete: Cascade)
//   studentId   Int
//   chapter     chapter             @relation(fields: [chapterId], references: [id], onDelete: Cascade)
//   chapterId   String
//   isOpened    Boolean             @default(true)
//   isCompleted Boolean             @default(false)
//   completedAt DateTime?

//   @@unique([studentId, chapterId])
//   @@index([chapterId])
//   @@index([studentId])
// }

// model admin {
//   id        String   @id @default(cuid())
//   name      String
//   phoneno   String   @unique
//   passcode  String
//   createdAt DateTime @default(now())
// }

// model teacher {
//   id        String   @id @default(cuid())
//   name      String
//   phoneno   String   @unique
//   passcode  String
//   isActive  Boolean  @default(true)
//   // attachemt attachment[]
//   createdAt DateTime @default(now())
// }

// model wpos_wpdatatable_23 {
//   wdt_ID         Int               @id @default(autoincrement())
//   name           String
//   passcode       String            @unique
//   phoneno        String            @unique
//   status         String
//   subject        String
//   startdate      DateTime
//   chat_id        String            @unique
//   progress       studentProgress[]
//   studentQuizzes studentQuiz[]
// }

// ###############################################################################################3
// #################################################################################################33
// #######################################################################################################
// #######################################################################################################

// model category {
//   id     String   @id @default(uuid())
//   name   String
//   course course[]
// }

// model attachment {
//   id   String @id @default(uuid())
//   name String
//   url  String @db.Text

//   course   course @relation(fields: [courseId], references: [id], onDelete: Cascade)
//   courseId String

//   teacher   teacher @relation(fields: [teacherId], references: [id], onDelete: Cascade)
//   teacherId String

//   createdAt DateTime @default(now())
//   updatedAt DateTime

//   @@index([courseId])
//   @@index([teacherId])
// }

// model userProgress {
//   id     String @id @default(uuid())
//   userId String 

//   chapterId String
//   chapter   chapter @relation(fields: [chapterId], references: [id], onDelete: Cascade)

//   isCompleted Boolean @default(false)

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@index([chapterId])
//   @@unique([userId, chapterId])
// }

// model purchase {
//   id        String   @id @default(uuid())
//   userId    String

//   courseId  String
//   course course @relation(fields: [courseId], references: [id], onDelete: Cascade)

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//  @@index([courseId])
// }

// model stripeCustomer {
//   id        String   @id @default(uuid())
//   userId    String @unique
//   stripeCustomerId  String   @unique

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

// }

// COURSE SYSTEM
// model course {
//   id        String   @id @default(cuid())
//   title     String
//   description String
//   teacher   teacher  @relation(fields: [teacherId], references: [id], onDelete: Cascade)
//   teacherId String
//   chapters   chapter[]
//   createdAt DateTime @default(now())
// }

// model chapter {
//   id        String   @id @default(cuid())
//   title     String
//   videoUrl  String
//   course    Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
//   courseId  String
//   // quiz      Quiz?
//   question   Question[]
//   order     Int
//   StudentProgress StudentProgress[]
//   createdAt DateTime @default(now())
// }
